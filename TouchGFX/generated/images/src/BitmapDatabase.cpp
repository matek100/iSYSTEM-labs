// 4.16.0 0xbf27d11d
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image__ags_45f2ecca5ca648849b935e209e2a0ce7[]; // BITMAP__AGS_45F2ECCA5CA648849B935E209E2A0CE7_ID = 0, Size: 746x575 pixels
extern const unsigned char image_capture[]; // BITMAP_CAPTURE_ID = 1, Size: 858x624 pixels
extern const unsigned char image_pngegg[]; // BITMAP_PNGEGG_ID = 2, Size: 210x210 pixels
extern const unsigned char image_pngegg_1[]; // BITMAP_PNGEGG_1_ID = 3, Size: 295x295 pixels
extern const unsigned char image_pngegg_1_[]; // BITMAP_PNGEGG_1__ID = 4, Size: 201x201 pixels
extern const unsigned char image_pngegg_kazalec[]; // BITMAP_PNGEGG_KAZALEC_ID = 5, Size: 295x295 pixels
extern const unsigned char image_pngegg_pikica[]; // BITMAP_PNGEGG_PIKICA_ID = 6, Size: 300x300 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image__ags_45f2ecca5ca648849b935e209e2a0ce7, 0, 746, 575, 0, 0, 746, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 575, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_capture, 0, 858, 624, 0, 0, 858, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 624, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_pngegg, 0, 210, 210, 107, 8, 1, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pngegg_1, 0, 295, 295, 118, 32, 60, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 11, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pngegg_1_, 0, 201, 201, 168, 75, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 43, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pngegg_kazalec, 0, 295, 295, 145, 29, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pngegg_pikica, 0, 300, 300, 147, 2, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
